// Generated by view binder compiler. Do not edit!
package com.afghanistan.simcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.afghanistan.simcards.R;
import com.airbnb.lottie.LottieAnimationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UpdateBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final CardView cardview1;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final LinearLayout linearBg;

  @NonNull
  public final LinearLayout linearDiv;

  @NonNull
  public final LottieAnimationView lottie;

  @NonNull
  public final Button okayButton;

  @NonNull
  public final TextView txtMsg;

  @NonNull
  public final TextView txtTitle;

  private UpdateBinding(@NonNull LinearLayout rootView, @NonNull Button cancelButton,
      @NonNull CardView cardview1, @NonNull LinearLayout linear1, @NonNull LinearLayout linearBg,
      @NonNull LinearLayout linearDiv, @NonNull LottieAnimationView lottie,
      @NonNull Button okayButton, @NonNull TextView txtMsg, @NonNull TextView txtTitle) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.cardview1 = cardview1;
    this.linear1 = linear1;
    this.linearBg = linearBg;
    this.linearDiv = linearDiv;
    this.lottie = lottie;
    this.okayButton = okayButton;
    this.txtMsg = txtMsg;
    this.txtTitle = txtTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UpdateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UpdateBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.update, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UpdateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_button;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.cardview1;
      CardView cardview1 = ViewBindings.findChildViewById(rootView, id);
      if (cardview1 == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.linear_bg;
      LinearLayout linearBg = ViewBindings.findChildViewById(rootView, id);
      if (linearBg == null) {
        break missingId;
      }

      id = R.id.linear_div;
      LinearLayout linearDiv = ViewBindings.findChildViewById(rootView, id);
      if (linearDiv == null) {
        break missingId;
      }

      id = R.id.lottie;
      LottieAnimationView lottie = ViewBindings.findChildViewById(rootView, id);
      if (lottie == null) {
        break missingId;
      }

      id = R.id.okay_button;
      Button okayButton = ViewBindings.findChildViewById(rootView, id);
      if (okayButton == null) {
        break missingId;
      }

      id = R.id.txt_msg;
      TextView txtMsg = ViewBindings.findChildViewById(rootView, id);
      if (txtMsg == null) {
        break missingId;
      }

      id = R.id.txt_title;
      TextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      return new UpdateBinding((LinearLayout) rootView, cancelButton, cardview1, linear1, linearBg,
          linearDiv, lottie, okayButton, txtMsg, txtTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
