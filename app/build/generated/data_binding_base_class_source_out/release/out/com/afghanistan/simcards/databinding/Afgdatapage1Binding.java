// Generated by view binder compiler. Do not edit!
package com.afghanistan.simcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.afghanistan.simcards.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Afgdatapage1Binding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout AppBar;

  @NonNull
  public final CoordinatorLayout Coordinator;

  @NonNull
  public final Toolbar Toolbar;

  @NonNull
  public final LinearLayout base;

  @NonNull
  public final LinearLayout layout1;

  @NonNull
  public final LinearLayout layout2;

  @NonNull
  public final LinearLayout layout3;

  @NonNull
  public final LinearLayout layout4;

  @NonNull
  public final LinearLayout layout5;

  @NonNull
  public final LinearLayout layout6;

  @NonNull
  public final LinearLayout layout7;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final LinearLayout linear4;

  @NonNull
  public final LinearLayout linear504;

  @NonNull
  public final LinearLayout linear505;

  @NonNull
  public final LinearLayout linear506;

  @NonNull
  public final LinearLayout linear507;

  @NonNull
  public final LinearLayout linear508;

  @NonNull
  public final LinearLayout linear509;

  @NonNull
  public final RecyclerView recyclerview1;

  @NonNull
  public final RecyclerView recyclerview2;

  @NonNull
  public final RecyclerView recyclerview3;

  @NonNull
  public final RecyclerView recyclerview4;

  @NonNull
  public final RecyclerView recyclerview5;

  @NonNull
  public final RecyclerView recyclerview6;

  @NonNull
  public final RecyclerView recyclerview7;

  @NonNull
  public final LinearLayout tablayout;

  @NonNull
  public final LinearLayout trash;

  private Afgdatapage1Binding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout AppBar,
      @NonNull CoordinatorLayout Coordinator, @NonNull Toolbar Toolbar, @NonNull LinearLayout base,
      @NonNull LinearLayout layout1, @NonNull LinearLayout layout2, @NonNull LinearLayout layout3,
      @NonNull LinearLayout layout4, @NonNull LinearLayout layout5, @NonNull LinearLayout layout6,
      @NonNull LinearLayout layout7, @NonNull LinearLayout linear1, @NonNull LinearLayout linear4,
      @NonNull LinearLayout linear504, @NonNull LinearLayout linear505,
      @NonNull LinearLayout linear506, @NonNull LinearLayout linear507,
      @NonNull LinearLayout linear508, @NonNull LinearLayout linear509,
      @NonNull RecyclerView recyclerview1, @NonNull RecyclerView recyclerview2,
      @NonNull RecyclerView recyclerview3, @NonNull RecyclerView recyclerview4,
      @NonNull RecyclerView recyclerview5, @NonNull RecyclerView recyclerview6,
      @NonNull RecyclerView recyclerview7, @NonNull LinearLayout tablayout,
      @NonNull LinearLayout trash) {
    this.rootView = rootView;
    this.AppBar = AppBar;
    this.Coordinator = Coordinator;
    this.Toolbar = Toolbar;
    this.base = base;
    this.layout1 = layout1;
    this.layout2 = layout2;
    this.layout3 = layout3;
    this.layout4 = layout4;
    this.layout5 = layout5;
    this.layout6 = layout6;
    this.layout7 = layout7;
    this.linear1 = linear1;
    this.linear4 = linear4;
    this.linear504 = linear504;
    this.linear505 = linear505;
    this.linear506 = linear506;
    this.linear507 = linear507;
    this.linear508 = linear508;
    this.linear509 = linear509;
    this.recyclerview1 = recyclerview1;
    this.recyclerview2 = recyclerview2;
    this.recyclerview3 = recyclerview3;
    this.recyclerview4 = recyclerview4;
    this.recyclerview5 = recyclerview5;
    this.recyclerview6 = recyclerview6;
    this.recyclerview7 = recyclerview7;
    this.tablayout = tablayout;
    this.trash = trash;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Afgdatapage1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Afgdatapage1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.afgdatapage1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Afgdatapage1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id._app_bar;
      AppBarLayout AppBar = ViewBindings.findChildViewById(rootView, id);
      if (AppBar == null) {
        break missingId;
      }

      CoordinatorLayout Coordinator = (CoordinatorLayout) rootView;

      id = R.id._toolbar;
      Toolbar Toolbar = ViewBindings.findChildViewById(rootView, id);
      if (Toolbar == null) {
        break missingId;
      }

      id = R.id.base;
      LinearLayout base = ViewBindings.findChildViewById(rootView, id);
      if (base == null) {
        break missingId;
      }

      id = R.id.layout1;
      LinearLayout layout1 = ViewBindings.findChildViewById(rootView, id);
      if (layout1 == null) {
        break missingId;
      }

      id = R.id.layout2;
      LinearLayout layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.layout3;
      LinearLayout layout3 = ViewBindings.findChildViewById(rootView, id);
      if (layout3 == null) {
        break missingId;
      }

      id = R.id.layout4;
      LinearLayout layout4 = ViewBindings.findChildViewById(rootView, id);
      if (layout4 == null) {
        break missingId;
      }

      id = R.id.layout5;
      LinearLayout layout5 = ViewBindings.findChildViewById(rootView, id);
      if (layout5 == null) {
        break missingId;
      }

      id = R.id.layout6;
      LinearLayout layout6 = ViewBindings.findChildViewById(rootView, id);
      if (layout6 == null) {
        break missingId;
      }

      id = R.id.layout7;
      LinearLayout layout7 = ViewBindings.findChildViewById(rootView, id);
      if (layout7 == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.linear4;
      LinearLayout linear4 = ViewBindings.findChildViewById(rootView, id);
      if (linear4 == null) {
        break missingId;
      }

      id = R.id.linear504;
      LinearLayout linear504 = ViewBindings.findChildViewById(rootView, id);
      if (linear504 == null) {
        break missingId;
      }

      id = R.id.linear505;
      LinearLayout linear505 = ViewBindings.findChildViewById(rootView, id);
      if (linear505 == null) {
        break missingId;
      }

      id = R.id.linear506;
      LinearLayout linear506 = ViewBindings.findChildViewById(rootView, id);
      if (linear506 == null) {
        break missingId;
      }

      id = R.id.linear507;
      LinearLayout linear507 = ViewBindings.findChildViewById(rootView, id);
      if (linear507 == null) {
        break missingId;
      }

      id = R.id.linear508;
      LinearLayout linear508 = ViewBindings.findChildViewById(rootView, id);
      if (linear508 == null) {
        break missingId;
      }

      id = R.id.linear509;
      LinearLayout linear509 = ViewBindings.findChildViewById(rootView, id);
      if (linear509 == null) {
        break missingId;
      }

      id = R.id.recyclerview1;
      RecyclerView recyclerview1 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview1 == null) {
        break missingId;
      }

      id = R.id.recyclerview2;
      RecyclerView recyclerview2 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview2 == null) {
        break missingId;
      }

      id = R.id.recyclerview3;
      RecyclerView recyclerview3 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview3 == null) {
        break missingId;
      }

      id = R.id.recyclerview4;
      RecyclerView recyclerview4 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview4 == null) {
        break missingId;
      }

      id = R.id.recyclerview5;
      RecyclerView recyclerview5 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview5 == null) {
        break missingId;
      }

      id = R.id.recyclerview6;
      RecyclerView recyclerview6 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview6 == null) {
        break missingId;
      }

      id = R.id.recyclerview7;
      RecyclerView recyclerview7 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview7 == null) {
        break missingId;
      }

      id = R.id.tablayout;
      LinearLayout tablayout = ViewBindings.findChildViewById(rootView, id);
      if (tablayout == null) {
        break missingId;
      }

      id = R.id.trash;
      LinearLayout trash = ViewBindings.findChildViewById(rootView, id);
      if (trash == null) {
        break missingId;
      }

      return new Afgdatapage1Binding((CoordinatorLayout) rootView, AppBar, Coordinator, Toolbar,
          base, layout1, layout2, layout3, layout4, layout5, layout6, layout7, linear1, linear4,
          linear504, linear505, linear506, linear507, linear508, linear509, recyclerview1,
          recyclerview2, recyclerview3, recyclerview4, recyclerview5, recyclerview6, recyclerview7,
          tablayout, trash);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
