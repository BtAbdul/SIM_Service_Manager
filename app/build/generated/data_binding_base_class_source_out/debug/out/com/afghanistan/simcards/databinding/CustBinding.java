// Generated by view binder compiler. Do not edit!
package com.afghanistan.simcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.afghanistan.simcards.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText edit;

  @NonNull
  public final ImageView im1;

  @NonNull
  public final ImageView im2;

  @NonNull
  public final ImageView im3;

  @NonNull
  public final ImageView im4;

  @NonNull
  public final ImageView im5;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final LinearLayout linear4;

  @NonNull
  public final LinearLayout linear5;

  @NonNull
  public final MaterialButton mbutton;

  @NonNull
  public final TextView textInfo;

  @NonNull
  public final TextView textTitle;

  private CustBinding(@NonNull LinearLayout rootView, @NonNull EditText edit,
      @NonNull ImageView im1, @NonNull ImageView im2, @NonNull ImageView im3,
      @NonNull ImageView im4, @NonNull ImageView im5, @NonNull LinearLayout linear1,
      @NonNull LinearLayout linear2, @NonNull LinearLayout linear4, @NonNull LinearLayout linear5,
      @NonNull MaterialButton mbutton, @NonNull TextView textInfo, @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.edit = edit;
    this.im1 = im1;
    this.im2 = im2;
    this.im3 = im3;
    this.im4 = im4;
    this.im5 = im5;
    this.linear1 = linear1;
    this.linear2 = linear2;
    this.linear4 = linear4;
    this.linear5 = linear5;
    this.mbutton = mbutton;
    this.textInfo = textInfo;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.cust, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit;
      EditText edit = ViewBindings.findChildViewById(rootView, id);
      if (edit == null) {
        break missingId;
      }

      id = R.id.im1;
      ImageView im1 = ViewBindings.findChildViewById(rootView, id);
      if (im1 == null) {
        break missingId;
      }

      id = R.id.im2;
      ImageView im2 = ViewBindings.findChildViewById(rootView, id);
      if (im2 == null) {
        break missingId;
      }

      id = R.id.im3;
      ImageView im3 = ViewBindings.findChildViewById(rootView, id);
      if (im3 == null) {
        break missingId;
      }

      id = R.id.im4;
      ImageView im4 = ViewBindings.findChildViewById(rootView, id);
      if (im4 == null) {
        break missingId;
      }

      id = R.id.im5;
      ImageView im5 = ViewBindings.findChildViewById(rootView, id);
      if (im5 == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.linear2;
      LinearLayout linear2 = ViewBindings.findChildViewById(rootView, id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.linear4;
      LinearLayout linear4 = ViewBindings.findChildViewById(rootView, id);
      if (linear4 == null) {
        break missingId;
      }

      id = R.id.linear5;
      LinearLayout linear5 = ViewBindings.findChildViewById(rootView, id);
      if (linear5 == null) {
        break missingId;
      }

      id = R.id.mbutton;
      MaterialButton mbutton = ViewBindings.findChildViewById(rootView, id);
      if (mbutton == null) {
        break missingId;
      }

      id = R.id.text_info;
      TextView textInfo = ViewBindings.findChildViewById(rootView, id);
      if (textInfo == null) {
        break missingId;
      }

      id = R.id.text_title;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new CustBinding((LinearLayout) rootView, edit, im1, im2, im3, im4, im5, linear1,
          linear2, linear4, linear5, mbutton, textInfo, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
