// Generated by view binder compiler. Do not edit!
package com.afghanistan.simcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.afghanistan.simcards.R;
import com.facebook.shimmer.ShimmerFrameLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ShimmerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout linear18;

  @NonNull
  public final ShimmerFrameLayout linear19;

  @NonNull
  public final ShimmerFrameLayout linear20;

  @NonNull
  public final LinearLayout linear3;

  @NonNull
  public final ShimmerFrameLayout linear5;

  private ShimmerBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout linear18,
      @NonNull ShimmerFrameLayout linear19, @NonNull ShimmerFrameLayout linear20,
      @NonNull LinearLayout linear3, @NonNull ShimmerFrameLayout linear5) {
    this.rootView = rootView;
    this.linear18 = linear18;
    this.linear19 = linear19;
    this.linear20 = linear20;
    this.linear3 = linear3;
    this.linear5 = linear5;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ShimmerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ShimmerBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.shimmer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ShimmerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linear18;
      LinearLayout linear18 = ViewBindings.findChildViewById(rootView, id);
      if (linear18 == null) {
        break missingId;
      }

      id = R.id.linear19;
      ShimmerFrameLayout linear19 = ViewBindings.findChildViewById(rootView, id);
      if (linear19 == null) {
        break missingId;
      }

      id = R.id.linear20;
      ShimmerFrameLayout linear20 = ViewBindings.findChildViewById(rootView, id);
      if (linear20 == null) {
        break missingId;
      }

      id = R.id.linear3;
      LinearLayout linear3 = ViewBindings.findChildViewById(rootView, id);
      if (linear3 == null) {
        break missingId;
      }

      id = R.id.linear5;
      ShimmerFrameLayout linear5 = ViewBindings.findChildViewById(rootView, id);
      if (linear5 == null) {
        break missingId;
      }

      return new ShimmerBinding((LinearLayout) rootView, linear18, linear19, linear20, linear3,
          linear5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
